{
  "api/GeoSharpi.Capture.BaseCameraCapture.html": {
    "href": "api/GeoSharpi.Capture.BaseCameraCapture.html",
    "title": "Class BaseCameraCapture | GeoSharpi",
    "keywords": "Class BaseCameraCapture Inheritance Object BaseCameraCapture Namespace : GeoSharpi.Capture Assembly : cs.temp.dll.dll Syntax public class BaseCameraCapture : MonoBehaviour Fields cameraTexture Declaration protected Texture2D cameraTexture Field Value Type Description Texture2D OnCaptureTaken Declaration public ImageNodeEvent OnCaptureTaken Field Value Type Description ImageNodeEvent spawnInScene Declaration public bool spawnInScene Field Value Type Description Boolean Methods CreateNode(Transform, Single) Declaration public void CreateNode(Transform pos = null, float focalLength = 0F) Parameters Type Name Description Transform pos Single focalLength TakeCameraImage() Declaration public virtual void TakeCameraImage()"
  },
  "api/GeoSharpi.Capture.BaseMeshingController.html": {
    "href": "api/GeoSharpi.Capture.BaseMeshingController.html",
    "title": "Class BaseMeshingController | GeoSharpi",
    "keywords": "Class BaseMeshingController Inheritance Object BaseMeshingController Namespace : GeoSharpi.Capture Assembly : cs.temp.dll.dll Syntax public class BaseMeshingController : MonoBehaviour Fields OnMeshCaptured Declaration public NodeEvent OnMeshCaptured Field Value Type Description NodeEvent Methods CreateNode(Transform) Declaration public void CreateNode(Transform pos = null) Parameters Type Name Description Transform pos GetCurrentMesh() Get the current mesh belonging to this object Declaration public Mesh GetCurrentMesh() Returns Type Description Mesh SaveMesh() Declaration public void SaveMesh()"
  },
  "api/GeoSharpi.Capture.CaptureSession.html": {
    "href": "api/GeoSharpi.Capture.CaptureSession.html",
    "title": "Class CaptureSession | GeoSharpi",
    "keywords": "Class CaptureSession A class to store all the nodes from a single session Inheritance Object CaptureSession Namespace : GeoSharpi.Capture Assembly : cs.temp.dll.dll Syntax [Serializable] public class CaptureSession Constructors CaptureSession(String, Matrix4x4) The instantiator for a new session automatically creates a new folder with the current timestamp. Declaration public CaptureSession(string path, Matrix4x4 origin) Parameters Type Name Description String path the desired path to save the sesison to, defaults to persistant datapath Matrix4x4 origin The origin transform as a Matrix4x4 Fields imageQuality Declaration public int imageQuality Field Value Type Description Int32 nodes Declaration public List<Node> nodes Field Value Type Description List < Node > sessionNode Declaration public SessionNode sessionNode Field Value Type Description SessionNode sessionPath Declaration public string sessionPath Field Value Type Description String Methods AddNode(Node) Adds a Node to the Session Declaration public void AddNode(Node node) Parameters Type Name Description Node node The Node to add LogGraph() Log's and saves the Current Graph Declaration public void LogGraph() UpdateGraph() Updates and saves the Session to a Graph Declaration public RDFGraph UpdateGraph() Returns Type Description RDFGraph The RDF Graph"
  },
  "api/GeoSharpi.Capture.CaptureSessionManager.html": {
    "href": "api/GeoSharpi.Capture.CaptureSessionManager.html",
    "title": "Class CaptureSessionManager | GeoSharpi",
    "keywords": "Class CaptureSessionManager Manages the creation of CaptureSessions Inheritance Object CaptureSessionManager Namespace : GeoSharpi.Capture Assembly : cs.temp.dll.dll Syntax public class CaptureSessionManager : MonoBehaviour Fields assetSession Declaration public CaptureSession assetSession Field Value Type Description CaptureSession graphLoadPath Declaration public string graphLoadPath Field Value Type Description String useLinkedSubjects Declaration public bool useLinkedSubjects Field Value Type Description Boolean Methods AddNode(Node) Adds a node to the current Session Declaration public void AddNode(Node node) Parameters Type Name Description Node node The Node to add CreateNewSession() Creates a new session to store the data Declaration public void CreateNewSession() GetAllNodeTypes() Logs all the Node types, including the Extended ones Declaration public void GetAllNodeTypes() LoadGraph() Load a graph from the graphloadPath Declaration public void LoadGraph() LoadSession(String) Load a session from an rdf path Declaration public void LoadSession(string path) Parameters Type Name Description String path The Path to load from SaveGraph() Saves the Graph Declaration public RDFGraph SaveGraph() Returns Type Description RDFGraph The Updated RDF Graph SendSessionToServer() Sends the current session to the specified server Declaration public void SendSessionToServer() VisualiseSession() spawn the current Capturesession in the scene Declaration public void VisualiseSession()"
  },
  "api/GeoSharpi.Capture.html": {
    "href": "api/GeoSharpi.Capture.html",
    "title": "Namespace GeoSharpi.Capture | GeoSharpi",
    "keywords": "Namespace GeoSharpi.Capture Classes BaseCameraCapture BaseMeshingController CaptureSession A class to store all the nodes from a single session CaptureSessionManager Manages the creation of CaptureSessions"
  },
  "api/GeoSharpi.Nodes.GeometryNode.html": {
    "href": "api/GeoSharpi.Nodes.GeometryNode.html",
    "title": "Class GeometryNode | GeoSharpi",
    "keywords": "Class GeometryNode The Node Class for a Geometry (Mesh) Inheritance Object Node GeometryNode MeshNode Inherited Members Node.subject Node.graphPath Node.cartesianTransform Node.path Node.dateTime Node.properties Node.CreateNode(String, String) Node.CreateEmptyNode() Node.GetClass() Node.GetSubject() Node.GetName() Node.FromGraph(RDFGraph, RDFResource) Node.ToGraph() Namespace : GeoSharpi.Nodes Assembly : cs.temp.dll.dll Syntax [Serializable] public class GeometryNode : Node Constructors GeometryNode() Declaration public GeometryNode() GeometryNode(Mesh, Matrix4x4) Declaration public GeometryNode(Mesh geometryMesh, Matrix4x4 origin) Parameters Type Name Description Mesh geometryMesh Matrix4x4 origin GeometryNode(String, String) Declaration public GeometryNode(string _graphPath = \"\", string _subject = \"\") Parameters Type Name Description String _graphPath String _subject Fields displayDistance Declaration public float displayDistance Field Value Type Description Single mesh Declaration public Mesh mesh Field Value Type Description Mesh meshShader Declaration public Shader meshShader Field Value Type Description Shader Methods GetResourceObject() Declaration public override GameObject GetResourceObject() Returns Type Description GameObject Overrides Node.GetResourceObject() LoadResource(String) Declaration public override void LoadResource(string folderPath) Parameters Type Name Description String folderPath Overrides Node.LoadResource(String) SaveResource(String) Declaration public override void SaveResource(string rootFolder = \"\") Parameters Type Name Description String rootFolder Overrides Node.SaveResource(String)"
  },
  "api/GeoSharpi.Nodes.html": {
    "href": "api/GeoSharpi.Nodes.html",
    "title": "Namespace GeoSharpi.Nodes | GeoSharpi",
    "keywords": "Namespace GeoSharpi.Nodes Classes GeometryNode The Node Class for a Geometry (Mesh) ImageNode The Node Class for an Image MeshNode Node The Base node object that provides data to a resource SessionNode The Node Class for a Session"
  },
  "api/GeoSharpi.Nodes.ImageNode.html": {
    "href": "api/GeoSharpi.Nodes.ImageNode.html",
    "title": "Class ImageNode | GeoSharpi",
    "keywords": "Class ImageNode The Node Class for an Image Inheritance Object Node ImageNode Inherited Members Node.subject Node.graphPath Node.cartesianTransform Node.path Node.dateTime Node.properties Node.CreateNode(String, String) Node.CreateEmptyNode() Node.GetClass() Node.GetSubject() Node.GetName() Node.FromGraph(RDFGraph, RDFResource) Node.ToGraph() Namespace : GeoSharpi.Nodes Assembly : cs.temp.dll.dll Syntax [Serializable] public class ImageNode : Node Constructors ImageNode() Declaration public ImageNode() ImageNode(String, String) Declaration public ImageNode(string _graphPath = \"\", string _subject = \"\") Parameters Type Name Description String _graphPath String _subject ImageNode(Texture2D, Matrix4x4, Single) Declaration public ImageNode(Texture2D cameraTexture, Matrix4x4 cameraTransform, float focalLength35mm) Parameters Type Name Description Texture2D cameraTexture Matrix4x4 cameraTransform Single focalLength35mm Fields displayDistance Declaration public float displayDistance Field Value Type Description Single focalLengthIn35mmFilm Declaration public float focalLengthIn35mmFilm Field Value Type Description Single imageHeight Declaration public int imageHeight Field Value Type Description Int32 imageTexture Declaration public Texture2D imageTexture Field Value Type Description Texture2D imageWidth Declaration public int imageWidth Field Value Type Description Int32 saveQuality Declaration public int saveQuality Field Value Type Description Int32 textureShader Declaration public Shader textureShader Field Value Type Description Shader Methods GetResourceObject() Declaration public override GameObject GetResourceObject() Returns Type Description GameObject Overrides Node.GetResourceObject() LoadResource(String) Declaration public override void LoadResource(string folderPath) Parameters Type Name Description String folderPath Overrides Node.LoadResource(String) SaveResource(String) Declaration public override void SaveResource(string rootFolder = \"\") Parameters Type Name Description String rootFolder Overrides Node.SaveResource(String)"
  },
  "api/GeoSharpi.Nodes.MeshNode.html": {
    "href": "api/GeoSharpi.Nodes.MeshNode.html",
    "title": "Class MeshNode | GeoSharpi",
    "keywords": "Class MeshNode Inheritance Object Node GeometryNode MeshNode Inherited Members GeometryNode.mesh GeometryNode.displayDistance GeometryNode.meshShader GeometryNode.GetResourceObject() GeometryNode.LoadResource(String) GeometryNode.SaveResource(String) Node.subject Node.graphPath Node.cartesianTransform Node.path Node.dateTime Node.properties Node.CreateNode(String, String) Node.CreateEmptyNode() Node.GetClass() Node.GetSubject() Node.GetName() Node.FromGraph(RDFGraph, RDFResource) Node.ToGraph() Namespace : GeoSharpi.Nodes Assembly : cs.temp.dll.dll Syntax [Serializable] public class MeshNode : GeometryNode"
  },
  "api/GeoSharpi.Nodes.Node.html": {
    "href": "api/GeoSharpi.Nodes.Node.html",
    "title": "Class Node | GeoSharpi",
    "keywords": "Class Node The Base node object that provides data to a resource Inheritance Object Node GeometryNode ImageNode SessionNode Namespace : GeoSharpi.Nodes Assembly : cs.temp.dll.dll Syntax [Serializable] public class Node Constructors Node() Creates a new Empty Node Declaration public Node() Node(String, String) Creates a new Node with a path and subject Declaration public Node(string _graphPath = \"\", string _subject = \"\") Parameters Type Name Description String _graphPath The path to create the node from String _subject The subject to parse the graph with Fields cartesianTransform Declaration public Matrix4x4 cartesianTransform Field Value Type Description Matrix4x4 dateTime Declaration public string dateTime Field Value Type Description String graphPath Declaration public string graphPath Field Value Type Description String path Declaration public string path Field Value Type Description String properties Declaration public SerializableDictionary<string, string> properties Field Value Type Description SerializableDictionary < String , String > subject Declaration public string subject Field Value Type Description String Methods CreateEmptyNode() Creates an empty node Declaration protected void CreateEmptyNode() CreateNode(String, String) Function to create a basic node from an option graphpath and subject Declaration protected void CreateNode(string _graphPath = \"\", string _subject = \"\") Parameters Type Name Description String _graphPath the path to the graph to parse String _subject the name of the node in the graph FromGraph(RDFGraph, RDFResource) parses a graph and assigns all the variables Declaration public void FromGraph(RDFGraph rdfGraph, RDFResource RDFSubject) Parameters Type Name Description RDFGraph rdfGraph The graph to parse from RDFResource RDFSubject The subject to filter GetClass() Returns the Class of this Node Declaration public RDFPlainLiteral GetClass() Returns Type Description RDFPlainLiteral The Specific Class GetName() Returns the name of the Node Declaration public string GetName() Returns Type Description String The name of the node without the extension GetResourceObject() Returns the GameObject from the resource Declaration public virtual GameObject GetResourceObject() Returns Type Description GameObject the GameObject GetSubject() Returns the Subject of this node Declaration public RDFResource GetSubject() Returns Type Description RDFResource The Url foratted subject LoadResource(String) Loads the resource from the path Declaration public virtual void LoadResource(string path) Parameters Type Name Description String path the path of the resource SaveResource(String) Saves the resource to a path Declaration public virtual void SaveResource(string path) Parameters Type Name Description String path The path to save to ToGraph() Convert the Node to a RDFGrapf Declaration public RDFGraph ToGraph() Returns Type Description RDFGraph the Seriialised node as a RDFGraph"
  },
  "api/GeoSharpi.Nodes.SessionNode.html": {
    "href": "api/GeoSharpi.Nodes.SessionNode.html",
    "title": "Class SessionNode | GeoSharpi",
    "keywords": "Class SessionNode The Node Class for a Session Inheritance Object Node SessionNode Inherited Members Node.subject Node.graphPath Node.cartesianTransform Node.path Node.dateTime Node.properties Node.CreateNode(String, String) Node.CreateEmptyNode() Node.GetClass() Node.GetSubject() Node.GetName() Node.FromGraph(RDFGraph, RDFResource) Node.ToGraph() Node.LoadResource(String) Node.SaveResource(String) Namespace : GeoSharpi.Nodes Assembly : cs.temp.dll.dll Syntax [Serializable] public class SessionNode : Node Constructors SessionNode() Declaration public SessionNode() SessionNode(String, String) Declaration public SessionNode(string _graphPath = \"\", string _subject = \"\") Parameters Type Name Description String _graphPath String _subject Fields linkedSubjects Declaration public List<string> linkedSubjects Field Value Type Description List < String > Methods AddSubject(Node) Add a Node to the Current Session Declaration public void AddSubject(Node node) Parameters Type Name Description Node node GetResourceObject() Declaration public override GameObject GetResourceObject() Returns Type Description GameObject Overrides Node.GetResourceObject()"
  },
  "api/GeoSharpi.Utils.CameraExtensions.html": {
    "href": "api/GeoSharpi.Utils.CameraExtensions.html",
    "title": "Class CameraExtensions | GeoSharpi",
    "keywords": "Class CameraExtensions Camera Extensions to get more info from the camera Inheritance Object CameraExtensions Namespace : GeoSharpi.Utils Assembly : cs.temp.dll.dll Syntax public static class CameraExtensions Methods Get35MillimeterFocalLength(Camera) Returns the exif standard 35mmequivalent focal length of the camera Declaration public static float Get35MillimeterFocalLength(this Camera camera) Parameters Type Name Description Camera camera Returns Type Description Single the 35mm equivalent focal length"
  },
  "api/GeoSharpi.Utils.Events.GeometryNodeEvent.html": {
    "href": "api/GeoSharpi.Utils.Events.GeometryNodeEvent.html",
    "title": "Class GeometryNodeEvent | GeoSharpi",
    "keywords": "Class GeometryNodeEvent An event which passes a Geosharpi GeometryNode Inheritance Object GeometryNodeEvent Namespace : GeoSharpi.Utils.Events Assembly : cs.temp.dll.dll Syntax [Serializable] public class GeometryNodeEvent : UnityEvent<GeometryNode>"
  },
  "api/GeoSharpi.Utils.Events.html": {
    "href": "api/GeoSharpi.Utils.Events.html",
    "title": "Namespace GeoSharpi.Utils.Events | GeoSharpi",
    "keywords": "Namespace GeoSharpi.Utils.Events Classes GeometryNodeEvent An event which passes a Geosharpi GeometryNode ImageNodeEvent An event which passes a Geosharpi ImageNode NodeEvent An event which passes a Geosharpi Node SessionNodeEvent An event which passes a Geosharpi SessionNode"
  },
  "api/GeoSharpi.Utils.Events.ImageNodeEvent.html": {
    "href": "api/GeoSharpi.Utils.Events.ImageNodeEvent.html",
    "title": "Class ImageNodeEvent | GeoSharpi",
    "keywords": "Class ImageNodeEvent An event which passes a Geosharpi ImageNode Inheritance Object ImageNodeEvent Namespace : GeoSharpi.Utils.Events Assembly : cs.temp.dll.dll Syntax [Serializable] public class ImageNodeEvent : UnityEvent<ImageNode>"
  },
  "api/GeoSharpi.Utils.Events.NodeEvent.html": {
    "href": "api/GeoSharpi.Utils.Events.NodeEvent.html",
    "title": "Class NodeEvent | GeoSharpi",
    "keywords": "Class NodeEvent An event which passes a Geosharpi Node Inheritance Object NodeEvent Namespace : GeoSharpi.Utils.Events Assembly : cs.temp.dll.dll Syntax [Serializable] public class NodeEvent : UnityEvent<Node>"
  },
  "api/GeoSharpi.Utils.Events.SessionNodeEvent.html": {
    "href": "api/GeoSharpi.Utils.Events.SessionNodeEvent.html",
    "title": "Class SessionNodeEvent | GeoSharpi",
    "keywords": "Class SessionNodeEvent An event which passes a Geosharpi SessionNode Inheritance Object SessionNodeEvent Namespace : GeoSharpi.Utils.Events Assembly : cs.temp.dll.dll Syntax [Serializable] public class SessionNodeEvent : UnityEvent<SessionNode>"
  },
  "api/GeoSharpi.Utils.html": {
    "href": "api/GeoSharpi.Utils.html",
    "title": "Namespace GeoSharpi.Utils | GeoSharpi",
    "keywords": "Namespace GeoSharpi.Utils Classes CameraExtensions Camera Extensions to get more info from the camera ImageIO Methods to save and load jpegs MatrixExtensions Extensions to add functionalities to Matrix 4x4's MeshIO Methods for saving and loading obj Meshes RDFUriAttribute A Custom property to add to variables in a script, this enables them to be serialised to RDF and contain the Correct namespace ReflectiveEnumerator Methods to dynamically work with enumerators TransformExtensions Extensions to add functionalities to Transforms"
  },
  "api/GeoSharpi.Utils.ImageIO.html": {
    "href": "api/GeoSharpi.Utils.ImageIO.html",
    "title": "Class ImageIO | GeoSharpi",
    "keywords": "Class ImageIO Methods to save and load jpegs Inheritance Object ImageIO Namespace : GeoSharpi.Utils Assembly : cs.temp.dll.dll Syntax public class ImageIO Methods LoadImage(String) Load an image from the specified path Declaration public static Texture2D LoadImage(string imagePath) Parameters Type Name Description String imagePath the path of the file, include the file name and extension Returns Type Description Texture2D the texture2D to display in the scene SaveImage(Texture2D, String, Int32) Save a texture2D to a file Declaration public static bool SaveImage(Texture2D imageTexture, string imagePath, int quality = 75) Parameters Type Name Description Texture2D imageTexture the texture to be saved String imagePath the path of the file, include the file name and extension Int32 quality the quality of the jpeg Returns Type Description Boolean the succes of the save"
  },
  "api/GeoSharpi.Utils.MatrixExtensions.html": {
    "href": "api/GeoSharpi.Utils.MatrixExtensions.html",
    "title": "Class MatrixExtensions | GeoSharpi",
    "keywords": "Class MatrixExtensions Extensions to add functionalities to Matrix 4x4's Inheritance Object MatrixExtensions Namespace : GeoSharpi.Utils Assembly : cs.temp.dll.dll Syntax public static class MatrixExtensions Methods ExtractPosition(Matrix4x4) Extracts the position from a matrix Declaration public static Vector3 ExtractPosition(this Matrix4x4 matrix) Parameters Type Name Description Matrix4x4 matrix the input matrix> Returns Type Description Vector3 the position as a Vector3 ExtractRotation(Matrix4x4) Extracts the rotation quaternion from a matrix Declaration public static Quaternion ExtractRotation(this Matrix4x4 matrix) Parameters Type Name Description Matrix4x4 matrix the input matrix Returns Type Description Quaternion The rotation as a quaternion ExtractScale(Matrix4x4) Extracts the scale from the matrix Declaration public static Vector3 ExtractScale(this Matrix4x4 matrix) Parameters Type Name Description Matrix4x4 matrix the input matrix Returns Type Description Vector3 the scale as a Vector3 Parse(Matrix4x4, String) Parses a string formatted matrix into a Matrix4x4 Declaration public static Matrix4x4 Parse(this Matrix4x4 matrix, string value) Parameters Type Name Description Matrix4x4 matrix the returned matrix String value the string value of the matrix, split with newlines and spaces Returns Type Description Matrix4x4 a Matrix4x4"
  },
  "api/GeoSharpi.Utils.MeshIO.html": {
    "href": "api/GeoSharpi.Utils.MeshIO.html",
    "title": "Class MeshIO | GeoSharpi",
    "keywords": "Class MeshIO Methods for saving and loading obj Meshes Inheritance Object MeshIO Namespace : GeoSharpi.Utils Assembly : cs.temp.dll.dll Syntax public class MeshIO Methods LoadMesh(String) Loads a mesh as a gameobject from a file Declaration public static GameObject LoadMesh(string path) Parameters Type Name Description String path the location of the mesh as an absolute path Returns Type Description GameObject the Textured mesh as a GameObject MeshToString(Mesh) Generates an obj string from a mesh This class is a modified version of the one found at the UnifyCommunity wiki. It provides utilities for exporting a mesh to a.obj file author KeliHlodversson(see http://unifycommunity.com/wiki/index.php?title=ObjExporter ) Declaration public static string MeshToString(Mesh m) Parameters Type Name Description Mesh m the mesh Returns Type Description String a obj formatted as a string SaveMesh(Mesh, String) Save a mesh to a file Declaration public static bool SaveMesh(Mesh mesh, string meshPath) Parameters Type Name Description Mesh mesh the mesh to save String meshPath the path of the file, include the file name and extension Returns Type Description Boolean the succes of the save"
  },
  "api/GeoSharpi.Utils.RDFUriAttribute.html": {
    "href": "api/GeoSharpi.Utils.RDFUriAttribute.html",
    "title": "Class RDFUriAttribute | GeoSharpi",
    "keywords": "Class RDFUriAttribute A Custom property to add to variables in a script, this enables them to be serialised to RDF and contain the Correct namespace Inheritance Object RDFUriAttribute Namespace : GeoSharpi.Utils Assembly : cs.temp.dll.dll Syntax [Serializable] public class RDFUriAttribute : PropertyAttribute Constructors RDFUriAttribute(String, String, RDFModelEnums.RDFDatatypes) A Custom Attribute to enable RDF Serialisation and Namespace definition Declaration public RDFUriAttribute(string _prefix, string _uri, RDFModelEnums.RDFDatatypes _type = null) Parameters Type Name Description String _prefix the short name for the uri String _uri the full Namespace uri RDFModelEnums.RDFDatatypes _type The type of variable, defaults to plain untyped literal Fields prefix the short prefix to shorten the Uri Declaration public string prefix Field Value Type Description String type the type of the object, default to untyped plain literal Declaration public RDFModelEnums.RDFDatatypes type Field Value Type Description RDFModelEnums.RDFDatatypes uri The full namespace URI Declaration public string uri Field Value Type Description String"
  },
  "api/GeoSharpi.Utils.ReflectiveEnumerator.html": {
    "href": "api/GeoSharpi.Utils.ReflectiveEnumerator.html",
    "title": "Class ReflectiveEnumerator | GeoSharpi",
    "keywords": "Class ReflectiveEnumerator Methods to dynamically work with enumerators Inheritance Object ReflectiveEnumerator Namespace : GeoSharpi.Utils Assembly : cs.temp.dll.dll Syntax public static class ReflectiveEnumerator Methods GetEnumerableOfType<T>(Object[]) Returns all objects from a certain type Declaration public static IEnumerable<T> GetEnumerableOfType<T>(params object[] constructorArgs) where T : class, IComparable<T> Parameters Type Name Description Object [] constructorArgs Returns Type Description IEnumerable <T> a list of objects Type Parameters Name Description T ToStringList<T>(ICollection<T>) Prints the collection as a comma separated string Declaration public static string ToStringList<T>(this ICollection<T> list) Parameters Type Name Description ICollection <T> list The collection Returns Type Description String a comma separated string of the collection Type Parameters Name Description T The generic collection type"
  },
  "api/GeoSharpi.Utils.TransformExtensions.html": {
    "href": "api/GeoSharpi.Utils.TransformExtensions.html",
    "title": "Class TransformExtensions | GeoSharpi",
    "keywords": "Class TransformExtensions Extensions to add functionalities to Transforms Inheritance Object TransformExtensions Namespace : GeoSharpi.Utils Assembly : cs.temp.dll.dll Syntax public static class TransformExtensions Methods FromMatrix(Transform, Matrix4x4) Sets a transform to a Matrix4x4 Declaration public static void FromMatrix(this Transform transform, Matrix4x4 matrix) Parameters Type Name Description Transform transform the transform to change Matrix4x4 matrix The matrix4x4 to set the transform to"
  },
  "api/GeoSharpi.Visualisation.html": {
    "href": "api/GeoSharpi.Visualisation.html",
    "title": "Namespace GeoSharpi.Visualisation | GeoSharpi",
    "keywords": "Namespace GeoSharpi.Visualisation Classes NodeVisualizer A class to visualise any type of node"
  },
  "api/GeoSharpi.Visualisation.NodeVisualizer.html": {
    "href": "api/GeoSharpi.Visualisation.NodeVisualizer.html",
    "title": "Class NodeVisualizer | GeoSharpi",
    "keywords": "Class NodeVisualizer A class to visualise any type of node Inheritance Object NodeVisualizer Namespace : GeoSharpi.Visualisation Assembly : cs.temp.dll.dll Syntax public class NodeVisualizer : MonoBehaviour Fields node Declaration public Node node Field Value Type Description Node Methods ResetNode() Resets the current Node Declaration public void ResetNode() SetUpNode(Node, Transform) The constructor to instantiate the node in the scene Declaration public void SetUpNode(Node _node, Transform parentTransform = null) Parameters Type Name Description Node _node the node to instansiate Transform parentTransform The parent of the transform, defaults to this gameobject"
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Getting Started | GeoSharpi",
    "keywords": "Getting Started Functionality All resources are stored as an abstract dataclass Node() , containing its metadata and resource (image, mesh,...). Data Capture This package contains functions to capture and save Images and meshes from either in game, or real life using XR devices. Capture Session Datacapture is managed by the CaptureSessionManager . This script contains the nescecary functions to save and store different resources. Data Reconstruction An big part of this package is the ability to display RDF based Sessions and Nodes. All nodes can be visualised using the NodeVisualizer() Server Connection The whole CaptureSession can be send to a webserver using a post request. It is up to the server to interpret the data. If the server responds with a calculated location, the App will store it as a reference. Extension Node Extension Custom Nodes can be created by inheriting from Node . Serialising Variables Extra variables that should be serialised should be decorated with [RDFUri(prefix,uri,dataType)] Example using GeoSharpi; [System.Serializable] public class CustomNode : Node { [RDFUri(prefix,uri,dataType)] public var newVar; // The constructor can contain extra custom logic, but should use the base constructor. public CustomNode(string _graphPath = \"\", string _subject = \"\") { CreateNode(_graphPath, _subject); } }"
  },
  "index.html": {
    "href": "index.html",
    "title": "GeoSharpi | GeoSharpi",
    "keywords": "GeoSharpi Tools to collect sensory data from XR devices in the Unity engine namespace GeoSharpi Installation This can be imported as a UnityPackage in any existing Unity project through the Package manager with the Git url. Documentation You can find the full API references here: jellekul.github.io/GeoSharpi Licensing The code in this project is licensed under MIT license."
  }
}